
SM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000926  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000002a  00800060  00000926  000009ba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  0080008a  0080008a  000009e4  2**0
                  ALLOC
  3 .stab         000008dc  00000000  00000000  000009e4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000cab  00000000  00000000  000012c0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 e2       	ldi	r30, 0x26	; 38
  68:	f9 e0       	ldi	r31, 0x09	; 9
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	aa 38       	cpi	r26, 0x8A	; 138
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	aa e8       	ldi	r26, 0x8A	; 138
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 39       	cpi	r26, 0x90	; 144
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 9d 01 	call	0x33a	; 0x33a <main>
  8a:	0c 94 91 04 	jmp	0x922	; 0x922 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <SM_Init>:
#include "STD_TYPES.h"
#include "SM.h"



void SM_Init( State* SwitchStateTable,u8 SwitchStateSize, u8 initState ,u8* State){
  92:	df 93       	push	r29
  94:	cf 93       	push	r28
  96:	cd b7       	in	r28, 0x3d	; 61
  98:	de b7       	in	r29, 0x3e	; 62
  9a:	27 97       	sbiw	r28, 0x07	; 7
  9c:	0f b6       	in	r0, 0x3f	; 63
  9e:	f8 94       	cli
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	0f be       	out	0x3f, r0	; 63
  a4:	cd bf       	out	0x3d, r28	; 61
  a6:	9b 83       	std	Y+3, r25	; 0x03
  a8:	8a 83       	std	Y+2, r24	; 0x02
  aa:	6c 83       	std	Y+4, r22	; 0x04
  ac:	4d 83       	std	Y+5, r20	; 0x05
  ae:	3f 83       	std	Y+7, r19	; 0x07
  b0:	2e 83       	std	Y+6, r18	; 0x06

	u8 i = 0;
  b2:	19 82       	std	Y+1, r1	; 0x01
	for(i=0;i<SwitchStateSize;i++){
  b4:	19 82       	std	Y+1, r1	; 0x01
  b6:	56 c0       	rjmp	.+172    	; 0x164 <SM_Init+0xd2>

		if(SwitchStateTable[i].StateId== initState){
  b8:	89 81       	ldd	r24, Y+1	; 0x01
  ba:	88 2f       	mov	r24, r24
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	9c 01       	movw	r18, r24
  c0:	22 0f       	add	r18, r18
  c2:	33 1f       	adc	r19, r19
  c4:	c9 01       	movw	r24, r18
  c6:	88 0f       	add	r24, r24
  c8:	99 1f       	adc	r25, r25
  ca:	88 0f       	add	r24, r24
  cc:	99 1f       	adc	r25, r25
  ce:	88 0f       	add	r24, r24
  d0:	99 1f       	adc	r25, r25
  d2:	ac 01       	movw	r20, r24
  d4:	42 1b       	sub	r20, r18
  d6:	53 0b       	sbc	r21, r19
  d8:	9a 01       	movw	r18, r20
  da:	8a 81       	ldd	r24, Y+2	; 0x02
  dc:	9b 81       	ldd	r25, Y+3	; 0x03
  de:	fc 01       	movw	r30, r24
  e0:	e2 0f       	add	r30, r18
  e2:	f3 1f       	adc	r31, r19
  e4:	92 81       	ldd	r25, Z+2	; 0x02
  e6:	8d 81       	ldd	r24, Y+5	; 0x05
  e8:	98 17       	cp	r25, r24
  ea:	c9 f5       	brne	.+114    	; 0x15e <SM_Init+0xcc>

			*State=i;
  ec:	ee 81       	ldd	r30, Y+6	; 0x06
  ee:	ff 81       	ldd	r31, Y+7	; 0x07
  f0:	89 81       	ldd	r24, Y+1	; 0x01
  f2:	80 83       	st	Z, r24
			if(SwitchStateTable[i].SM_onEntry == STD_NULL){
  f4:	89 81       	ldd	r24, Y+1	; 0x01
  f6:	88 2f       	mov	r24, r24
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	9c 01       	movw	r18, r24
  fc:	22 0f       	add	r18, r18
  fe:	33 1f       	adc	r19, r19
 100:	c9 01       	movw	r24, r18
 102:	88 0f       	add	r24, r24
 104:	99 1f       	adc	r25, r25
 106:	88 0f       	add	r24, r24
 108:	99 1f       	adc	r25, r25
 10a:	88 0f       	add	r24, r24
 10c:	99 1f       	adc	r25, r25
 10e:	ac 01       	movw	r20, r24
 110:	42 1b       	sub	r20, r18
 112:	53 0b       	sbc	r21, r19
 114:	9a 01       	movw	r18, r20
 116:	8a 81       	ldd	r24, Y+2	; 0x02
 118:	9b 81       	ldd	r25, Y+3	; 0x03
 11a:	fc 01       	movw	r30, r24
 11c:	e2 0f       	add	r30, r18
 11e:	f3 1f       	adc	r31, r19
 120:	83 81       	ldd	r24, Z+3	; 0x03
 122:	94 81       	ldd	r25, Z+4	; 0x04
 124:	00 97       	sbiw	r24, 0x00	; 0
 126:	19 f1       	breq	.+70     	; 0x16e <SM_Init+0xdc>

			}
			else{
				SwitchStateTable[i].SM_onEntry();
 128:	89 81       	ldd	r24, Y+1	; 0x01
 12a:	88 2f       	mov	r24, r24
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	9c 01       	movw	r18, r24
 130:	22 0f       	add	r18, r18
 132:	33 1f       	adc	r19, r19
 134:	c9 01       	movw	r24, r18
 136:	88 0f       	add	r24, r24
 138:	99 1f       	adc	r25, r25
 13a:	88 0f       	add	r24, r24
 13c:	99 1f       	adc	r25, r25
 13e:	88 0f       	add	r24, r24
 140:	99 1f       	adc	r25, r25
 142:	ac 01       	movw	r20, r24
 144:	42 1b       	sub	r20, r18
 146:	53 0b       	sbc	r21, r19
 148:	9a 01       	movw	r18, r20
 14a:	8a 81       	ldd	r24, Y+2	; 0x02
 14c:	9b 81       	ldd	r25, Y+3	; 0x03
 14e:	fc 01       	movw	r30, r24
 150:	e2 0f       	add	r30, r18
 152:	f3 1f       	adc	r31, r19
 154:	03 80       	ldd	r0, Z+3	; 0x03
 156:	f4 81       	ldd	r31, Z+4	; 0x04
 158:	e0 2d       	mov	r30, r0
 15a:	09 95       	icall
 15c:	08 c0       	rjmp	.+16     	; 0x16e <SM_Init+0xdc>


void SM_Init( State* SwitchStateTable,u8 SwitchStateSize, u8 initState ,u8* State){

	u8 i = 0;
	for(i=0;i<SwitchStateSize;i++){
 15e:	89 81       	ldd	r24, Y+1	; 0x01
 160:	8f 5f       	subi	r24, 0xFF	; 255
 162:	89 83       	std	Y+1, r24	; 0x01
 164:	99 81       	ldd	r25, Y+1	; 0x01
 166:	8c 81       	ldd	r24, Y+4	; 0x04
 168:	98 17       	cp	r25, r24
 16a:	08 f4       	brcc	.+2      	; 0x16e <SM_Init+0xdc>
 16c:	a5 cf       	rjmp	.-182    	; 0xb8 <SM_Init+0x26>
		}
	}



}
 16e:	27 96       	adiw	r28, 0x07	; 7
 170:	0f b6       	in	r0, 0x3f	; 63
 172:	f8 94       	cli
 174:	de bf       	out	0x3e, r29	; 62
 176:	0f be       	out	0x3f, r0	; 63
 178:	cd bf       	out	0x3d, r28	; 61
 17a:	cf 91       	pop	r28
 17c:	df 91       	pop	r29
 17e:	08 95       	ret

00000180 <SM_execute>:

void SM_execute(State*  SwitchStateTable ,u8* state){
 180:	df 93       	push	r29
 182:	cf 93       	push	r28
 184:	cd b7       	in	r28, 0x3d	; 61
 186:	de b7       	in	r29, 0x3e	; 62
 188:	28 97       	sbiw	r28, 0x08	; 8
 18a:	0f b6       	in	r0, 0x3f	; 63
 18c:	f8 94       	cli
 18e:	de bf       	out	0x3e, r29	; 62
 190:	0f be       	out	0x3f, r0	; 63
 192:	cd bf       	out	0x3d, r28	; 61
 194:	9e 83       	std	Y+6, r25	; 0x06
 196:	8d 83       	std	Y+5, r24	; 0x05
 198:	78 87       	std	Y+8, r23	; 0x08
 19a:	6f 83       	std	Y+7, r22	; 0x07

	State* Current_state = &SwitchStateTable[*state];
 19c:	ef 81       	ldd	r30, Y+7	; 0x07
 19e:	f8 85       	ldd	r31, Y+8	; 0x08
 1a0:	80 81       	ld	r24, Z
 1a2:	88 2f       	mov	r24, r24
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	9c 01       	movw	r18, r24
 1a8:	22 0f       	add	r18, r18
 1aa:	33 1f       	adc	r19, r19
 1ac:	c9 01       	movw	r24, r18
 1ae:	88 0f       	add	r24, r24
 1b0:	99 1f       	adc	r25, r25
 1b2:	88 0f       	add	r24, r24
 1b4:	99 1f       	adc	r25, r25
 1b6:	88 0f       	add	r24, r24
 1b8:	99 1f       	adc	r25, r25
 1ba:	ac 01       	movw	r20, r24
 1bc:	42 1b       	sub	r20, r18
 1be:	53 0b       	sbc	r21, r19
 1c0:	9a 01       	movw	r18, r20
 1c2:	8d 81       	ldd	r24, Y+5	; 0x05
 1c4:	9e 81       	ldd	r25, Y+6	; 0x06
 1c6:	82 0f       	add	r24, r18
 1c8:	93 1f       	adc	r25, r19
 1ca:	9c 83       	std	Y+4, r25	; 0x04
 1cc:	8b 83       	std	Y+3, r24	; 0x03
	;


	u8 i=0;
 1ce:	1a 82       	std	Y+2, r1	; 0x02
	STD_Bool trasition=STD_false;
 1d0:	19 82       	std	Y+1, r1	; 0x01

	for(i=0;i<Current_state->u8TransitonTableSize;i++){
 1d2:	1a 82       	std	Y+2, r1	; 0x02
 1d4:	93 c0       	rjmp	.+294    	; 0x2fc <SM_execute+0x17c>

		if(Current_state->aTransitionTable[i].pfnGaurd!=STD_NULL){
 1d6:	eb 81       	ldd	r30, Y+3	; 0x03
 1d8:	fc 81       	ldd	r31, Y+4	; 0x04
 1da:	42 85       	ldd	r20, Z+10	; 0x0a
 1dc:	53 85       	ldd	r21, Z+11	; 0x0b
 1de:	8a 81       	ldd	r24, Y+2	; 0x02
 1e0:	28 2f       	mov	r18, r24
 1e2:	30 e0       	ldi	r19, 0x00	; 0
 1e4:	c9 01       	movw	r24, r18
 1e6:	88 0f       	add	r24, r24
 1e8:	99 1f       	adc	r25, r25
 1ea:	88 0f       	add	r24, r24
 1ec:	99 1f       	adc	r25, r25
 1ee:	88 0f       	add	r24, r24
 1f0:	99 1f       	adc	r25, r25
 1f2:	82 1b       	sub	r24, r18
 1f4:	93 0b       	sbc	r25, r19
 1f6:	fa 01       	movw	r30, r20
 1f8:	e8 0f       	add	r30, r24
 1fa:	f9 1f       	adc	r31, r25
 1fc:	83 81       	ldd	r24, Z+3	; 0x03
 1fe:	94 81       	ldd	r25, Z+4	; 0x04
 200:	00 97       	sbiw	r24, 0x00	; 0
 202:	09 f4       	brne	.+2      	; 0x206 <SM_execute+0x86>
 204:	78 c0       	rjmp	.+240    	; 0x2f6 <SM_execute+0x176>

			if(Current_state->aTransitionTable[i].pfnGaurd()== STD_true){
 206:	eb 81       	ldd	r30, Y+3	; 0x03
 208:	fc 81       	ldd	r31, Y+4	; 0x04
 20a:	42 85       	ldd	r20, Z+10	; 0x0a
 20c:	53 85       	ldd	r21, Z+11	; 0x0b
 20e:	8a 81       	ldd	r24, Y+2	; 0x02
 210:	28 2f       	mov	r18, r24
 212:	30 e0       	ldi	r19, 0x00	; 0
 214:	c9 01       	movw	r24, r18
 216:	88 0f       	add	r24, r24
 218:	99 1f       	adc	r25, r25
 21a:	88 0f       	add	r24, r24
 21c:	99 1f       	adc	r25, r25
 21e:	88 0f       	add	r24, r24
 220:	99 1f       	adc	r25, r25
 222:	82 1b       	sub	r24, r18
 224:	93 0b       	sbc	r25, r19
 226:	fa 01       	movw	r30, r20
 228:	e8 0f       	add	r30, r24
 22a:	f9 1f       	adc	r31, r25
 22c:	03 80       	ldd	r0, Z+3	; 0x03
 22e:	f4 81       	ldd	r31, Z+4	; 0x04
 230:	e0 2d       	mov	r30, r0
 232:	09 95       	icall
 234:	81 30       	cpi	r24, 0x01	; 1
 236:	09 f0       	breq	.+2      	; 0x23a <SM_execute+0xba>
 238:	5e c0       	rjmp	.+188    	; 0x2f6 <SM_execute+0x176>

				trasition=STD_true;
 23a:	81 e0       	ldi	r24, 0x01	; 1
 23c:	89 83       	std	Y+1, r24	; 0x01

				if(Current_state->SM_onExit == STD_NULL){
 23e:	eb 81       	ldd	r30, Y+3	; 0x03
 240:	fc 81       	ldd	r31, Y+4	; 0x04
 242:	87 81       	ldd	r24, Z+7	; 0x07
 244:	90 85       	ldd	r25, Z+8	; 0x08
 246:	00 97       	sbiw	r24, 0x00	; 0
 248:	31 f0       	breq	.+12     	; 0x256 <SM_execute+0xd6>

				}
				else{
					Current_state->SM_onExit();
 24a:	eb 81       	ldd	r30, Y+3	; 0x03
 24c:	fc 81       	ldd	r31, Y+4	; 0x04
 24e:	07 80       	ldd	r0, Z+7	; 0x07
 250:	f0 85       	ldd	r31, Z+8	; 0x08
 252:	e0 2d       	mov	r30, r0
 254:	09 95       	icall
				}

				*state=Current_state->aTransitionTable[i].u8NextStateIdx;
 256:	eb 81       	ldd	r30, Y+3	; 0x03
 258:	fc 81       	ldd	r31, Y+4	; 0x04
 25a:	42 85       	ldd	r20, Z+10	; 0x0a
 25c:	53 85       	ldd	r21, Z+11	; 0x0b
 25e:	8a 81       	ldd	r24, Y+2	; 0x02
 260:	28 2f       	mov	r18, r24
 262:	30 e0       	ldi	r19, 0x00	; 0
 264:	c9 01       	movw	r24, r18
 266:	88 0f       	add	r24, r24
 268:	99 1f       	adc	r25, r25
 26a:	88 0f       	add	r24, r24
 26c:	99 1f       	adc	r25, r25
 26e:	88 0f       	add	r24, r24
 270:	99 1f       	adc	r25, r25
 272:	82 1b       	sub	r24, r18
 274:	93 0b       	sbc	r25, r19
 276:	fa 01       	movw	r30, r20
 278:	e8 0f       	add	r30, r24
 27a:	f9 1f       	adc	r31, r25
 27c:	82 81       	ldd	r24, Z+2	; 0x02
 27e:	ef 81       	ldd	r30, Y+7	; 0x07
 280:	f8 85       	ldd	r31, Y+8	; 0x08
 282:	80 83       	st	Z, r24


				if(SwitchStateTable[*state].SM_onEntry == STD_NULL){
 284:	ef 81       	ldd	r30, Y+7	; 0x07
 286:	f8 85       	ldd	r31, Y+8	; 0x08
 288:	80 81       	ld	r24, Z
 28a:	88 2f       	mov	r24, r24
 28c:	90 e0       	ldi	r25, 0x00	; 0
 28e:	9c 01       	movw	r18, r24
 290:	22 0f       	add	r18, r18
 292:	33 1f       	adc	r19, r19
 294:	c9 01       	movw	r24, r18
 296:	88 0f       	add	r24, r24
 298:	99 1f       	adc	r25, r25
 29a:	88 0f       	add	r24, r24
 29c:	99 1f       	adc	r25, r25
 29e:	88 0f       	add	r24, r24
 2a0:	99 1f       	adc	r25, r25
 2a2:	ac 01       	movw	r20, r24
 2a4:	42 1b       	sub	r20, r18
 2a6:	53 0b       	sbc	r21, r19
 2a8:	9a 01       	movw	r18, r20
 2aa:	8d 81       	ldd	r24, Y+5	; 0x05
 2ac:	9e 81       	ldd	r25, Y+6	; 0x06
 2ae:	fc 01       	movw	r30, r24
 2b0:	e2 0f       	add	r30, r18
 2b2:	f3 1f       	adc	r31, r19
 2b4:	83 81       	ldd	r24, Z+3	; 0x03
 2b6:	94 81       	ldd	r25, Z+4	; 0x04
 2b8:	00 97       	sbiw	r24, 0x00	; 0
 2ba:	39 f1       	breq	.+78     	; 0x30a <SM_execute+0x18a>

				}
				else{
					SwitchStateTable[*state].SM_onEntry();
 2bc:	ef 81       	ldd	r30, Y+7	; 0x07
 2be:	f8 85       	ldd	r31, Y+8	; 0x08
 2c0:	80 81       	ld	r24, Z
 2c2:	88 2f       	mov	r24, r24
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	9c 01       	movw	r18, r24
 2c8:	22 0f       	add	r18, r18
 2ca:	33 1f       	adc	r19, r19
 2cc:	c9 01       	movw	r24, r18
 2ce:	88 0f       	add	r24, r24
 2d0:	99 1f       	adc	r25, r25
 2d2:	88 0f       	add	r24, r24
 2d4:	99 1f       	adc	r25, r25
 2d6:	88 0f       	add	r24, r24
 2d8:	99 1f       	adc	r25, r25
 2da:	ac 01       	movw	r20, r24
 2dc:	42 1b       	sub	r20, r18
 2de:	53 0b       	sbc	r21, r19
 2e0:	9a 01       	movw	r18, r20
 2e2:	8d 81       	ldd	r24, Y+5	; 0x05
 2e4:	9e 81       	ldd	r25, Y+6	; 0x06
 2e6:	fc 01       	movw	r30, r24
 2e8:	e2 0f       	add	r30, r18
 2ea:	f3 1f       	adc	r31, r19
 2ec:	03 80       	ldd	r0, Z+3	; 0x03
 2ee:	f4 81       	ldd	r31, Z+4	; 0x04
 2f0:	e0 2d       	mov	r30, r0
 2f2:	09 95       	icall
 2f4:	0a c0       	rjmp	.+20     	; 0x30a <SM_execute+0x18a>


	u8 i=0;
	STD_Bool trasition=STD_false;

	for(i=0;i<Current_state->u8TransitonTableSize;i++){
 2f6:	8a 81       	ldd	r24, Y+2	; 0x02
 2f8:	8f 5f       	subi	r24, 0xFF	; 255
 2fa:	8a 83       	std	Y+2, r24	; 0x02
 2fc:	eb 81       	ldd	r30, Y+3	; 0x03
 2fe:	fc 81       	ldd	r31, Y+4	; 0x04
 300:	91 85       	ldd	r25, Z+9	; 0x09
 302:	8a 81       	ldd	r24, Y+2	; 0x02
 304:	89 17       	cp	r24, r25
 306:	08 f4       	brcc	.+2      	; 0x30a <SM_execute+0x18a>
 308:	66 cf       	rjmp	.-308    	; 0x1d6 <SM_execute+0x56>
		}else{

		}

	}
	if(trasition==STD_false){
 30a:	89 81       	ldd	r24, Y+1	; 0x01
 30c:	88 23       	and	r24, r24
 30e:	61 f4       	brne	.+24     	; 0x328 <SM_execute+0x1a8>

		if (Current_state->SM_doAction == STD_NULL) {
 310:	eb 81       	ldd	r30, Y+3	; 0x03
 312:	fc 81       	ldd	r31, Y+4	; 0x04
 314:	85 81       	ldd	r24, Z+5	; 0x05
 316:	96 81       	ldd	r25, Z+6	; 0x06
 318:	00 97       	sbiw	r24, 0x00	; 0
 31a:	31 f0       	breq	.+12     	; 0x328 <SM_execute+0x1a8>

		}
		else {
			Current_state->SM_doAction();
 31c:	eb 81       	ldd	r30, Y+3	; 0x03
 31e:	fc 81       	ldd	r31, Y+4	; 0x04
 320:	05 80       	ldd	r0, Z+5	; 0x05
 322:	f6 81       	ldd	r31, Z+6	; 0x06
 324:	e0 2d       	mov	r30, r0
 326:	09 95       	icall
	}



	return;
}
 328:	28 96       	adiw	r28, 0x08	; 8
 32a:	0f b6       	in	r0, 0x3f	; 63
 32c:	f8 94       	cli
 32e:	de bf       	out	0x3e, r29	; 62
 330:	0f be       	out	0x3f, r0	; 63
 332:	cd bf       	out	0x3d, r28	; 61
 334:	cf 91       	pop	r28
 336:	df 91       	pop	r29
 338:	08 95       	ret

0000033a <main>:
#include<stdio.h>
#include "STD_TYPES.h"
#include"SM.h"

int main(void){
 33a:	df 93       	push	r29
 33c:	cf 93       	push	r28
 33e:	cd b7       	in	r28, 0x3d	; 61
 340:	de b7       	in	r29, 0x3e	; 62


printf(" Hellow world");
 342:	00 d0       	rcall	.+0      	; 0x344 <main+0xa>
 344:	ed b7       	in	r30, 0x3d	; 61
 346:	fe b7       	in	r31, 0x3e	; 62
 348:	31 96       	adiw	r30, 0x01	; 1
 34a:	80 e6       	ldi	r24, 0x60	; 96
 34c:	90 e0       	ldi	r25, 0x00	; 0
 34e:	91 83       	std	Z+1, r25	; 0x01
 350:	80 83       	st	Z, r24
 352:	0e 94 c8 01 	call	0x390	; 0x390 <printf>
 356:	0f 90       	pop	r0
 358:	0f 90       	pop	r0
    return 0;
 35a:	80 e0       	ldi	r24, 0x00	; 0
 35c:	90 e0       	ldi	r25, 0x00	; 0
}
 35e:	cf 91       	pop	r28
 360:	df 91       	pop	r29
 362:	08 95       	ret

00000364 <bReleaseToPrepressedGaurd>:
		   .StateExit = 0x55AA,
}  };


STD_Bool bReleaseToPrepressedGaurd(void)
{
 364:	df 93       	push	r29
 366:	cf 93       	push	r28
 368:	cd b7       	in	r28, 0x3d	; 61
 36a:	de b7       	in	r29, 0x3e	; 62
	return STD_true;
 36c:	81 e0       	ldi	r24, 0x01	; 1
}
 36e:	cf 91       	pop	r28
 370:	df 91       	pop	r29
 372:	08 95       	ret

00000374 <vidReleasedOnEntry>:


void vidReleasedOnEntry(void){}
 374:	df 93       	push	r29
 376:	cf 93       	push	r28
 378:	cd b7       	in	r28, 0x3d	; 61
 37a:	de b7       	in	r29, 0x3e	; 62
 37c:	cf 91       	pop	r28
 37e:	df 91       	pop	r29
 380:	08 95       	ret

00000382 <vidReleasedOnAction>:
void vidReleasedOnAction(void){}
 382:	df 93       	push	r29
 384:	cf 93       	push	r28
 386:	cd b7       	in	r28, 0x3d	; 61
 388:	de b7       	in	r29, 0x3e	; 62
 38a:	cf 91       	pop	r28
 38c:	df 91       	pop	r29
 38e:	08 95       	ret

00000390 <printf>:
 390:	a0 e0       	ldi	r26, 0x00	; 0
 392:	b0 e0       	ldi	r27, 0x00	; 0
 394:	ee ec       	ldi	r30, 0xCE	; 206
 396:	f1 e0       	ldi	r31, 0x01	; 1
 398:	0c 94 6a 04 	jmp	0x8d4	; 0x8d4 <__prologue_saves__+0x20>
 39c:	fe 01       	movw	r30, r28
 39e:	35 96       	adiw	r30, 0x05	; 5
 3a0:	61 91       	ld	r22, Z+
 3a2:	71 91       	ld	r23, Z+
 3a4:	80 91 8c 00 	lds	r24, 0x008C
 3a8:	90 91 8d 00 	lds	r25, 0x008D
 3ac:	af 01       	movw	r20, r30
 3ae:	0e 94 dd 01 	call	0x3ba	; 0x3ba <vfprintf>
 3b2:	20 96       	adiw	r28, 0x00	; 0
 3b4:	e2 e0       	ldi	r30, 0x02	; 2
 3b6:	0c 94 86 04 	jmp	0x90c	; 0x90c <__epilogue_restores__+0x20>

000003ba <vfprintf>:
 3ba:	ab e0       	ldi	r26, 0x0B	; 11
 3bc:	b0 e0       	ldi	r27, 0x00	; 0
 3be:	e3 ee       	ldi	r30, 0xE3	; 227
 3c0:	f1 e0       	ldi	r31, 0x01	; 1
 3c2:	0c 94 5a 04 	jmp	0x8b4	; 0x8b4 <__prologue_saves__>
 3c6:	3c 01       	movw	r6, r24
 3c8:	2b 01       	movw	r4, r22
 3ca:	5a 01       	movw	r10, r20
 3cc:	fc 01       	movw	r30, r24
 3ce:	17 82       	std	Z+7, r1	; 0x07
 3d0:	16 82       	std	Z+6, r1	; 0x06
 3d2:	83 81       	ldd	r24, Z+3	; 0x03
 3d4:	81 fd       	sbrc	r24, 1
 3d6:	03 c0       	rjmp	.+6      	; 0x3de <vfprintf+0x24>
 3d8:	6f ef       	ldi	r22, 0xFF	; 255
 3da:	7f ef       	ldi	r23, 0xFF	; 255
 3dc:	c6 c1       	rjmp	.+908    	; 0x76a <vfprintf+0x3b0>
 3de:	9a e0       	ldi	r25, 0x0A	; 10
 3e0:	89 2e       	mov	r8, r25
 3e2:	1e 01       	movw	r2, r28
 3e4:	08 94       	sec
 3e6:	21 1c       	adc	r2, r1
 3e8:	31 1c       	adc	r3, r1
 3ea:	f3 01       	movw	r30, r6
 3ec:	23 81       	ldd	r18, Z+3	; 0x03
 3ee:	f2 01       	movw	r30, r4
 3f0:	23 fd       	sbrc	r18, 3
 3f2:	85 91       	lpm	r24, Z+
 3f4:	23 ff       	sbrs	r18, 3
 3f6:	81 91       	ld	r24, Z+
 3f8:	2f 01       	movw	r4, r30
 3fa:	88 23       	and	r24, r24
 3fc:	09 f4       	brne	.+2      	; 0x400 <vfprintf+0x46>
 3fe:	b2 c1       	rjmp	.+868    	; 0x764 <vfprintf+0x3aa>
 400:	85 32       	cpi	r24, 0x25	; 37
 402:	39 f4       	brne	.+14     	; 0x412 <vfprintf+0x58>
 404:	23 fd       	sbrc	r18, 3
 406:	85 91       	lpm	r24, Z+
 408:	23 ff       	sbrs	r18, 3
 40a:	81 91       	ld	r24, Z+
 40c:	2f 01       	movw	r4, r30
 40e:	85 32       	cpi	r24, 0x25	; 37
 410:	29 f4       	brne	.+10     	; 0x41c <vfprintf+0x62>
 412:	90 e0       	ldi	r25, 0x00	; 0
 414:	b3 01       	movw	r22, r6
 416:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <fputc>
 41a:	e7 cf       	rjmp	.-50     	; 0x3ea <vfprintf+0x30>
 41c:	98 2f       	mov	r25, r24
 41e:	ff 24       	eor	r15, r15
 420:	ee 24       	eor	r14, r14
 422:	99 24       	eor	r9, r9
 424:	ff e1       	ldi	r31, 0x1F	; 31
 426:	ff 15       	cp	r31, r15
 428:	d0 f0       	brcs	.+52     	; 0x45e <vfprintf+0xa4>
 42a:	9b 32       	cpi	r25, 0x2B	; 43
 42c:	69 f0       	breq	.+26     	; 0x448 <vfprintf+0x8e>
 42e:	9c 32       	cpi	r25, 0x2C	; 44
 430:	28 f4       	brcc	.+10     	; 0x43c <vfprintf+0x82>
 432:	90 32       	cpi	r25, 0x20	; 32
 434:	59 f0       	breq	.+22     	; 0x44c <vfprintf+0x92>
 436:	93 32       	cpi	r25, 0x23	; 35
 438:	91 f4       	brne	.+36     	; 0x45e <vfprintf+0xa4>
 43a:	0e c0       	rjmp	.+28     	; 0x458 <vfprintf+0x9e>
 43c:	9d 32       	cpi	r25, 0x2D	; 45
 43e:	49 f0       	breq	.+18     	; 0x452 <vfprintf+0x98>
 440:	90 33       	cpi	r25, 0x30	; 48
 442:	69 f4       	brne	.+26     	; 0x45e <vfprintf+0xa4>
 444:	41 e0       	ldi	r20, 0x01	; 1
 446:	24 c0       	rjmp	.+72     	; 0x490 <vfprintf+0xd6>
 448:	52 e0       	ldi	r21, 0x02	; 2
 44a:	f5 2a       	or	r15, r21
 44c:	84 e0       	ldi	r24, 0x04	; 4
 44e:	f8 2a       	or	r15, r24
 450:	28 c0       	rjmp	.+80     	; 0x4a2 <vfprintf+0xe8>
 452:	98 e0       	ldi	r25, 0x08	; 8
 454:	f9 2a       	or	r15, r25
 456:	25 c0       	rjmp	.+74     	; 0x4a2 <vfprintf+0xe8>
 458:	e0 e1       	ldi	r30, 0x10	; 16
 45a:	fe 2a       	or	r15, r30
 45c:	22 c0       	rjmp	.+68     	; 0x4a2 <vfprintf+0xe8>
 45e:	f7 fc       	sbrc	r15, 7
 460:	29 c0       	rjmp	.+82     	; 0x4b4 <vfprintf+0xfa>
 462:	89 2f       	mov	r24, r25
 464:	80 53       	subi	r24, 0x30	; 48
 466:	8a 30       	cpi	r24, 0x0A	; 10
 468:	70 f4       	brcc	.+28     	; 0x486 <vfprintf+0xcc>
 46a:	f6 fe       	sbrs	r15, 6
 46c:	05 c0       	rjmp	.+10     	; 0x478 <vfprintf+0xbe>
 46e:	98 9c       	mul	r9, r8
 470:	90 2c       	mov	r9, r0
 472:	11 24       	eor	r1, r1
 474:	98 0e       	add	r9, r24
 476:	15 c0       	rjmp	.+42     	; 0x4a2 <vfprintf+0xe8>
 478:	e8 9c       	mul	r14, r8
 47a:	e0 2c       	mov	r14, r0
 47c:	11 24       	eor	r1, r1
 47e:	e8 0e       	add	r14, r24
 480:	f0 e2       	ldi	r31, 0x20	; 32
 482:	ff 2a       	or	r15, r31
 484:	0e c0       	rjmp	.+28     	; 0x4a2 <vfprintf+0xe8>
 486:	9e 32       	cpi	r25, 0x2E	; 46
 488:	29 f4       	brne	.+10     	; 0x494 <vfprintf+0xda>
 48a:	f6 fc       	sbrc	r15, 6
 48c:	6b c1       	rjmp	.+726    	; 0x764 <vfprintf+0x3aa>
 48e:	40 e4       	ldi	r20, 0x40	; 64
 490:	f4 2a       	or	r15, r20
 492:	07 c0       	rjmp	.+14     	; 0x4a2 <vfprintf+0xe8>
 494:	9c 36       	cpi	r25, 0x6C	; 108
 496:	19 f4       	brne	.+6      	; 0x49e <vfprintf+0xe4>
 498:	50 e8       	ldi	r21, 0x80	; 128
 49a:	f5 2a       	or	r15, r21
 49c:	02 c0       	rjmp	.+4      	; 0x4a2 <vfprintf+0xe8>
 49e:	98 36       	cpi	r25, 0x68	; 104
 4a0:	49 f4       	brne	.+18     	; 0x4b4 <vfprintf+0xfa>
 4a2:	f2 01       	movw	r30, r4
 4a4:	23 fd       	sbrc	r18, 3
 4a6:	95 91       	lpm	r25, Z+
 4a8:	23 ff       	sbrs	r18, 3
 4aa:	91 91       	ld	r25, Z+
 4ac:	2f 01       	movw	r4, r30
 4ae:	99 23       	and	r25, r25
 4b0:	09 f0       	breq	.+2      	; 0x4b4 <vfprintf+0xfa>
 4b2:	b8 cf       	rjmp	.-144    	; 0x424 <vfprintf+0x6a>
 4b4:	89 2f       	mov	r24, r25
 4b6:	85 54       	subi	r24, 0x45	; 69
 4b8:	83 30       	cpi	r24, 0x03	; 3
 4ba:	18 f0       	brcs	.+6      	; 0x4c2 <vfprintf+0x108>
 4bc:	80 52       	subi	r24, 0x20	; 32
 4be:	83 30       	cpi	r24, 0x03	; 3
 4c0:	38 f4       	brcc	.+14     	; 0x4d0 <vfprintf+0x116>
 4c2:	44 e0       	ldi	r20, 0x04	; 4
 4c4:	50 e0       	ldi	r21, 0x00	; 0
 4c6:	a4 0e       	add	r10, r20
 4c8:	b5 1e       	adc	r11, r21
 4ca:	5f e3       	ldi	r21, 0x3F	; 63
 4cc:	59 83       	std	Y+1, r21	; 0x01
 4ce:	0f c0       	rjmp	.+30     	; 0x4ee <vfprintf+0x134>
 4d0:	93 36       	cpi	r25, 0x63	; 99
 4d2:	31 f0       	breq	.+12     	; 0x4e0 <vfprintf+0x126>
 4d4:	93 37       	cpi	r25, 0x73	; 115
 4d6:	79 f0       	breq	.+30     	; 0x4f6 <vfprintf+0x13c>
 4d8:	93 35       	cpi	r25, 0x53	; 83
 4da:	09 f0       	breq	.+2      	; 0x4de <vfprintf+0x124>
 4dc:	56 c0       	rjmp	.+172    	; 0x58a <vfprintf+0x1d0>
 4de:	20 c0       	rjmp	.+64     	; 0x520 <vfprintf+0x166>
 4e0:	f5 01       	movw	r30, r10
 4e2:	80 81       	ld	r24, Z
 4e4:	89 83       	std	Y+1, r24	; 0x01
 4e6:	42 e0       	ldi	r20, 0x02	; 2
 4e8:	50 e0       	ldi	r21, 0x00	; 0
 4ea:	a4 0e       	add	r10, r20
 4ec:	b5 1e       	adc	r11, r21
 4ee:	61 01       	movw	r12, r2
 4f0:	01 e0       	ldi	r16, 0x01	; 1
 4f2:	10 e0       	ldi	r17, 0x00	; 0
 4f4:	12 c0       	rjmp	.+36     	; 0x51a <vfprintf+0x160>
 4f6:	f5 01       	movw	r30, r10
 4f8:	c0 80       	ld	r12, Z
 4fa:	d1 80       	ldd	r13, Z+1	; 0x01
 4fc:	f6 fc       	sbrc	r15, 6
 4fe:	03 c0       	rjmp	.+6      	; 0x506 <vfprintf+0x14c>
 500:	6f ef       	ldi	r22, 0xFF	; 255
 502:	7f ef       	ldi	r23, 0xFF	; 255
 504:	02 c0       	rjmp	.+4      	; 0x50a <vfprintf+0x150>
 506:	69 2d       	mov	r22, r9
 508:	70 e0       	ldi	r23, 0x00	; 0
 50a:	42 e0       	ldi	r20, 0x02	; 2
 50c:	50 e0       	ldi	r21, 0x00	; 0
 50e:	a4 0e       	add	r10, r20
 510:	b5 1e       	adc	r11, r21
 512:	c6 01       	movw	r24, r12
 514:	0e 94 c5 03 	call	0x78a	; 0x78a <strnlen>
 518:	8c 01       	movw	r16, r24
 51a:	5f e7       	ldi	r21, 0x7F	; 127
 51c:	f5 22       	and	r15, r21
 51e:	14 c0       	rjmp	.+40     	; 0x548 <vfprintf+0x18e>
 520:	f5 01       	movw	r30, r10
 522:	c0 80       	ld	r12, Z
 524:	d1 80       	ldd	r13, Z+1	; 0x01
 526:	f6 fc       	sbrc	r15, 6
 528:	03 c0       	rjmp	.+6      	; 0x530 <vfprintf+0x176>
 52a:	6f ef       	ldi	r22, 0xFF	; 255
 52c:	7f ef       	ldi	r23, 0xFF	; 255
 52e:	02 c0       	rjmp	.+4      	; 0x534 <vfprintf+0x17a>
 530:	69 2d       	mov	r22, r9
 532:	70 e0       	ldi	r23, 0x00	; 0
 534:	42 e0       	ldi	r20, 0x02	; 2
 536:	50 e0       	ldi	r21, 0x00	; 0
 538:	a4 0e       	add	r10, r20
 53a:	b5 1e       	adc	r11, r21
 53c:	c6 01       	movw	r24, r12
 53e:	0e 94 ba 03 	call	0x774	; 0x774 <strnlen_P>
 542:	8c 01       	movw	r16, r24
 544:	50 e8       	ldi	r21, 0x80	; 128
 546:	f5 2a       	or	r15, r21
 548:	f3 fe       	sbrs	r15, 3
 54a:	07 c0       	rjmp	.+14     	; 0x55a <vfprintf+0x1a0>
 54c:	1a c0       	rjmp	.+52     	; 0x582 <vfprintf+0x1c8>
 54e:	80 e2       	ldi	r24, 0x20	; 32
 550:	90 e0       	ldi	r25, 0x00	; 0
 552:	b3 01       	movw	r22, r6
 554:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <fputc>
 558:	ea 94       	dec	r14
 55a:	8e 2d       	mov	r24, r14
 55c:	90 e0       	ldi	r25, 0x00	; 0
 55e:	08 17       	cp	r16, r24
 560:	19 07       	cpc	r17, r25
 562:	a8 f3       	brcs	.-22     	; 0x54e <vfprintf+0x194>
 564:	0e c0       	rjmp	.+28     	; 0x582 <vfprintf+0x1c8>
 566:	f6 01       	movw	r30, r12
 568:	f7 fc       	sbrc	r15, 7
 56a:	85 91       	lpm	r24, Z+
 56c:	f7 fe       	sbrs	r15, 7
 56e:	81 91       	ld	r24, Z+
 570:	6f 01       	movw	r12, r30
 572:	90 e0       	ldi	r25, 0x00	; 0
 574:	b3 01       	movw	r22, r6
 576:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <fputc>
 57a:	e1 10       	cpse	r14, r1
 57c:	ea 94       	dec	r14
 57e:	01 50       	subi	r16, 0x01	; 1
 580:	10 40       	sbci	r17, 0x00	; 0
 582:	01 15       	cp	r16, r1
 584:	11 05       	cpc	r17, r1
 586:	79 f7       	brne	.-34     	; 0x566 <vfprintf+0x1ac>
 588:	ea c0       	rjmp	.+468    	; 0x75e <vfprintf+0x3a4>
 58a:	94 36       	cpi	r25, 0x64	; 100
 58c:	11 f0       	breq	.+4      	; 0x592 <vfprintf+0x1d8>
 58e:	99 36       	cpi	r25, 0x69	; 105
 590:	69 f5       	brne	.+90     	; 0x5ec <vfprintf+0x232>
 592:	f7 fe       	sbrs	r15, 7
 594:	08 c0       	rjmp	.+16     	; 0x5a6 <vfprintf+0x1ec>
 596:	f5 01       	movw	r30, r10
 598:	20 81       	ld	r18, Z
 59a:	31 81       	ldd	r19, Z+1	; 0x01
 59c:	42 81       	ldd	r20, Z+2	; 0x02
 59e:	53 81       	ldd	r21, Z+3	; 0x03
 5a0:	84 e0       	ldi	r24, 0x04	; 4
 5a2:	90 e0       	ldi	r25, 0x00	; 0
 5a4:	0a c0       	rjmp	.+20     	; 0x5ba <vfprintf+0x200>
 5a6:	f5 01       	movw	r30, r10
 5a8:	80 81       	ld	r24, Z
 5aa:	91 81       	ldd	r25, Z+1	; 0x01
 5ac:	9c 01       	movw	r18, r24
 5ae:	44 27       	eor	r20, r20
 5b0:	37 fd       	sbrc	r19, 7
 5b2:	40 95       	com	r20
 5b4:	54 2f       	mov	r21, r20
 5b6:	82 e0       	ldi	r24, 0x02	; 2
 5b8:	90 e0       	ldi	r25, 0x00	; 0
 5ba:	a8 0e       	add	r10, r24
 5bc:	b9 1e       	adc	r11, r25
 5be:	9f e6       	ldi	r25, 0x6F	; 111
 5c0:	f9 22       	and	r15, r25
 5c2:	57 ff       	sbrs	r21, 7
 5c4:	09 c0       	rjmp	.+18     	; 0x5d8 <vfprintf+0x21e>
 5c6:	50 95       	com	r21
 5c8:	40 95       	com	r20
 5ca:	30 95       	com	r19
 5cc:	21 95       	neg	r18
 5ce:	3f 4f       	sbci	r19, 0xFF	; 255
 5d0:	4f 4f       	sbci	r20, 0xFF	; 255
 5d2:	5f 4f       	sbci	r21, 0xFF	; 255
 5d4:	e0 e8       	ldi	r30, 0x80	; 128
 5d6:	fe 2a       	or	r15, r30
 5d8:	ca 01       	movw	r24, r20
 5da:	b9 01       	movw	r22, r18
 5dc:	a1 01       	movw	r20, r2
 5de:	2a e0       	ldi	r18, 0x0A	; 10
 5e0:	30 e0       	ldi	r19, 0x00	; 0
 5e2:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <__ultoa_invert>
 5e6:	d8 2e       	mov	r13, r24
 5e8:	d2 18       	sub	r13, r2
 5ea:	40 c0       	rjmp	.+128    	; 0x66c <vfprintf+0x2b2>
 5ec:	95 37       	cpi	r25, 0x75	; 117
 5ee:	29 f4       	brne	.+10     	; 0x5fa <vfprintf+0x240>
 5f0:	1f 2d       	mov	r17, r15
 5f2:	1f 7e       	andi	r17, 0xEF	; 239
 5f4:	2a e0       	ldi	r18, 0x0A	; 10
 5f6:	30 e0       	ldi	r19, 0x00	; 0
 5f8:	1d c0       	rjmp	.+58     	; 0x634 <vfprintf+0x27a>
 5fa:	1f 2d       	mov	r17, r15
 5fc:	19 7f       	andi	r17, 0xF9	; 249
 5fe:	9f 36       	cpi	r25, 0x6F	; 111
 600:	61 f0       	breq	.+24     	; 0x61a <vfprintf+0x260>
 602:	90 37       	cpi	r25, 0x70	; 112
 604:	20 f4       	brcc	.+8      	; 0x60e <vfprintf+0x254>
 606:	98 35       	cpi	r25, 0x58	; 88
 608:	09 f0       	breq	.+2      	; 0x60c <vfprintf+0x252>
 60a:	ac c0       	rjmp	.+344    	; 0x764 <vfprintf+0x3aa>
 60c:	0f c0       	rjmp	.+30     	; 0x62c <vfprintf+0x272>
 60e:	90 37       	cpi	r25, 0x70	; 112
 610:	39 f0       	breq	.+14     	; 0x620 <vfprintf+0x266>
 612:	98 37       	cpi	r25, 0x78	; 120
 614:	09 f0       	breq	.+2      	; 0x618 <vfprintf+0x25e>
 616:	a6 c0       	rjmp	.+332    	; 0x764 <vfprintf+0x3aa>
 618:	04 c0       	rjmp	.+8      	; 0x622 <vfprintf+0x268>
 61a:	28 e0       	ldi	r18, 0x08	; 8
 61c:	30 e0       	ldi	r19, 0x00	; 0
 61e:	0a c0       	rjmp	.+20     	; 0x634 <vfprintf+0x27a>
 620:	10 61       	ori	r17, 0x10	; 16
 622:	14 fd       	sbrc	r17, 4
 624:	14 60       	ori	r17, 0x04	; 4
 626:	20 e1       	ldi	r18, 0x10	; 16
 628:	30 e0       	ldi	r19, 0x00	; 0
 62a:	04 c0       	rjmp	.+8      	; 0x634 <vfprintf+0x27a>
 62c:	14 fd       	sbrc	r17, 4
 62e:	16 60       	ori	r17, 0x06	; 6
 630:	20 e1       	ldi	r18, 0x10	; 16
 632:	32 e0       	ldi	r19, 0x02	; 2
 634:	17 ff       	sbrs	r17, 7
 636:	08 c0       	rjmp	.+16     	; 0x648 <vfprintf+0x28e>
 638:	f5 01       	movw	r30, r10
 63a:	60 81       	ld	r22, Z
 63c:	71 81       	ldd	r23, Z+1	; 0x01
 63e:	82 81       	ldd	r24, Z+2	; 0x02
 640:	93 81       	ldd	r25, Z+3	; 0x03
 642:	44 e0       	ldi	r20, 0x04	; 4
 644:	50 e0       	ldi	r21, 0x00	; 0
 646:	08 c0       	rjmp	.+16     	; 0x658 <vfprintf+0x29e>
 648:	f5 01       	movw	r30, r10
 64a:	80 81       	ld	r24, Z
 64c:	91 81       	ldd	r25, Z+1	; 0x01
 64e:	bc 01       	movw	r22, r24
 650:	80 e0       	ldi	r24, 0x00	; 0
 652:	90 e0       	ldi	r25, 0x00	; 0
 654:	42 e0       	ldi	r20, 0x02	; 2
 656:	50 e0       	ldi	r21, 0x00	; 0
 658:	a4 0e       	add	r10, r20
 65a:	b5 1e       	adc	r11, r21
 65c:	a1 01       	movw	r20, r2
 65e:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <__ultoa_invert>
 662:	d8 2e       	mov	r13, r24
 664:	d2 18       	sub	r13, r2
 666:	8f e7       	ldi	r24, 0x7F	; 127
 668:	f8 2e       	mov	r15, r24
 66a:	f1 22       	and	r15, r17
 66c:	f6 fe       	sbrs	r15, 6
 66e:	0b c0       	rjmp	.+22     	; 0x686 <vfprintf+0x2cc>
 670:	5e ef       	ldi	r21, 0xFE	; 254
 672:	f5 22       	and	r15, r21
 674:	d9 14       	cp	r13, r9
 676:	38 f4       	brcc	.+14     	; 0x686 <vfprintf+0x2cc>
 678:	f4 fe       	sbrs	r15, 4
 67a:	07 c0       	rjmp	.+14     	; 0x68a <vfprintf+0x2d0>
 67c:	f2 fc       	sbrc	r15, 2
 67e:	05 c0       	rjmp	.+10     	; 0x68a <vfprintf+0x2d0>
 680:	8f ee       	ldi	r24, 0xEF	; 239
 682:	f8 22       	and	r15, r24
 684:	02 c0       	rjmp	.+4      	; 0x68a <vfprintf+0x2d0>
 686:	1d 2d       	mov	r17, r13
 688:	01 c0       	rjmp	.+2      	; 0x68c <vfprintf+0x2d2>
 68a:	19 2d       	mov	r17, r9
 68c:	f4 fe       	sbrs	r15, 4
 68e:	0d c0       	rjmp	.+26     	; 0x6aa <vfprintf+0x2f0>
 690:	fe 01       	movw	r30, r28
 692:	ed 0d       	add	r30, r13
 694:	f1 1d       	adc	r31, r1
 696:	80 81       	ld	r24, Z
 698:	80 33       	cpi	r24, 0x30	; 48
 69a:	19 f4       	brne	.+6      	; 0x6a2 <vfprintf+0x2e8>
 69c:	99 ee       	ldi	r25, 0xE9	; 233
 69e:	f9 22       	and	r15, r25
 6a0:	08 c0       	rjmp	.+16     	; 0x6b2 <vfprintf+0x2f8>
 6a2:	1f 5f       	subi	r17, 0xFF	; 255
 6a4:	f2 fe       	sbrs	r15, 2
 6a6:	05 c0       	rjmp	.+10     	; 0x6b2 <vfprintf+0x2f8>
 6a8:	03 c0       	rjmp	.+6      	; 0x6b0 <vfprintf+0x2f6>
 6aa:	8f 2d       	mov	r24, r15
 6ac:	86 78       	andi	r24, 0x86	; 134
 6ae:	09 f0       	breq	.+2      	; 0x6b2 <vfprintf+0x2f8>
 6b0:	1f 5f       	subi	r17, 0xFF	; 255
 6b2:	0f 2d       	mov	r16, r15
 6b4:	f3 fc       	sbrc	r15, 3
 6b6:	14 c0       	rjmp	.+40     	; 0x6e0 <vfprintf+0x326>
 6b8:	f0 fe       	sbrs	r15, 0
 6ba:	0f c0       	rjmp	.+30     	; 0x6da <vfprintf+0x320>
 6bc:	1e 15       	cp	r17, r14
 6be:	10 f0       	brcs	.+4      	; 0x6c4 <vfprintf+0x30a>
 6c0:	9d 2c       	mov	r9, r13
 6c2:	0b c0       	rjmp	.+22     	; 0x6da <vfprintf+0x320>
 6c4:	9d 2c       	mov	r9, r13
 6c6:	9e 0c       	add	r9, r14
 6c8:	91 1a       	sub	r9, r17
 6ca:	1e 2d       	mov	r17, r14
 6cc:	06 c0       	rjmp	.+12     	; 0x6da <vfprintf+0x320>
 6ce:	80 e2       	ldi	r24, 0x20	; 32
 6d0:	90 e0       	ldi	r25, 0x00	; 0
 6d2:	b3 01       	movw	r22, r6
 6d4:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <fputc>
 6d8:	1f 5f       	subi	r17, 0xFF	; 255
 6da:	1e 15       	cp	r17, r14
 6dc:	c0 f3       	brcs	.-16     	; 0x6ce <vfprintf+0x314>
 6de:	04 c0       	rjmp	.+8      	; 0x6e8 <vfprintf+0x32e>
 6e0:	1e 15       	cp	r17, r14
 6e2:	10 f4       	brcc	.+4      	; 0x6e8 <vfprintf+0x32e>
 6e4:	e1 1a       	sub	r14, r17
 6e6:	01 c0       	rjmp	.+2      	; 0x6ea <vfprintf+0x330>
 6e8:	ee 24       	eor	r14, r14
 6ea:	04 ff       	sbrs	r16, 4
 6ec:	0f c0       	rjmp	.+30     	; 0x70c <vfprintf+0x352>
 6ee:	80 e3       	ldi	r24, 0x30	; 48
 6f0:	90 e0       	ldi	r25, 0x00	; 0
 6f2:	b3 01       	movw	r22, r6
 6f4:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <fputc>
 6f8:	02 ff       	sbrs	r16, 2
 6fa:	1d c0       	rjmp	.+58     	; 0x736 <vfprintf+0x37c>
 6fc:	01 fd       	sbrc	r16, 1
 6fe:	03 c0       	rjmp	.+6      	; 0x706 <vfprintf+0x34c>
 700:	88 e7       	ldi	r24, 0x78	; 120
 702:	90 e0       	ldi	r25, 0x00	; 0
 704:	0e c0       	rjmp	.+28     	; 0x722 <vfprintf+0x368>
 706:	88 e5       	ldi	r24, 0x58	; 88
 708:	90 e0       	ldi	r25, 0x00	; 0
 70a:	0b c0       	rjmp	.+22     	; 0x722 <vfprintf+0x368>
 70c:	80 2f       	mov	r24, r16
 70e:	86 78       	andi	r24, 0x86	; 134
 710:	91 f0       	breq	.+36     	; 0x736 <vfprintf+0x37c>
 712:	01 ff       	sbrs	r16, 1
 714:	02 c0       	rjmp	.+4      	; 0x71a <vfprintf+0x360>
 716:	8b e2       	ldi	r24, 0x2B	; 43
 718:	01 c0       	rjmp	.+2      	; 0x71c <vfprintf+0x362>
 71a:	80 e2       	ldi	r24, 0x20	; 32
 71c:	f7 fc       	sbrc	r15, 7
 71e:	8d e2       	ldi	r24, 0x2D	; 45
 720:	90 e0       	ldi	r25, 0x00	; 0
 722:	b3 01       	movw	r22, r6
 724:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <fputc>
 728:	06 c0       	rjmp	.+12     	; 0x736 <vfprintf+0x37c>
 72a:	80 e3       	ldi	r24, 0x30	; 48
 72c:	90 e0       	ldi	r25, 0x00	; 0
 72e:	b3 01       	movw	r22, r6
 730:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <fputc>
 734:	9a 94       	dec	r9
 736:	d9 14       	cp	r13, r9
 738:	c0 f3       	brcs	.-16     	; 0x72a <vfprintf+0x370>
 73a:	da 94       	dec	r13
 73c:	f1 01       	movw	r30, r2
 73e:	ed 0d       	add	r30, r13
 740:	f1 1d       	adc	r31, r1
 742:	80 81       	ld	r24, Z
 744:	90 e0       	ldi	r25, 0x00	; 0
 746:	b3 01       	movw	r22, r6
 748:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <fputc>
 74c:	dd 20       	and	r13, r13
 74e:	a9 f7       	brne	.-22     	; 0x73a <vfprintf+0x380>
 750:	06 c0       	rjmp	.+12     	; 0x75e <vfprintf+0x3a4>
 752:	80 e2       	ldi	r24, 0x20	; 32
 754:	90 e0       	ldi	r25, 0x00	; 0
 756:	b3 01       	movw	r22, r6
 758:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <fputc>
 75c:	ea 94       	dec	r14
 75e:	ee 20       	and	r14, r14
 760:	c1 f7       	brne	.-16     	; 0x752 <vfprintf+0x398>
 762:	43 ce       	rjmp	.-890    	; 0x3ea <vfprintf+0x30>
 764:	f3 01       	movw	r30, r6
 766:	66 81       	ldd	r22, Z+6	; 0x06
 768:	77 81       	ldd	r23, Z+7	; 0x07
 76a:	cb 01       	movw	r24, r22
 76c:	2b 96       	adiw	r28, 0x0b	; 11
 76e:	e2 e1       	ldi	r30, 0x12	; 18
 770:	0c 94 76 04 	jmp	0x8ec	; 0x8ec <__epilogue_restores__>

00000774 <strnlen_P>:
 774:	fc 01       	movw	r30, r24
 776:	05 90       	lpm	r0, Z+
 778:	61 50       	subi	r22, 0x01	; 1
 77a:	70 40       	sbci	r23, 0x00	; 0
 77c:	01 10       	cpse	r0, r1
 77e:	d8 f7       	brcc	.-10     	; 0x776 <strnlen_P+0x2>
 780:	80 95       	com	r24
 782:	90 95       	com	r25
 784:	8e 0f       	add	r24, r30
 786:	9f 1f       	adc	r25, r31
 788:	08 95       	ret

0000078a <strnlen>:
 78a:	fc 01       	movw	r30, r24
 78c:	61 50       	subi	r22, 0x01	; 1
 78e:	70 40       	sbci	r23, 0x00	; 0
 790:	01 90       	ld	r0, Z+
 792:	01 10       	cpse	r0, r1
 794:	d8 f7       	brcc	.-10     	; 0x78c <strnlen+0x2>
 796:	80 95       	com	r24
 798:	90 95       	com	r25
 79a:	8e 0f       	add	r24, r30
 79c:	9f 1f       	adc	r25, r31
 79e:	08 95       	ret

000007a0 <fputc>:
 7a0:	0f 93       	push	r16
 7a2:	1f 93       	push	r17
 7a4:	cf 93       	push	r28
 7a6:	df 93       	push	r29
 7a8:	8c 01       	movw	r16, r24
 7aa:	eb 01       	movw	r28, r22
 7ac:	8b 81       	ldd	r24, Y+3	; 0x03
 7ae:	81 ff       	sbrs	r24, 1
 7b0:	1b c0       	rjmp	.+54     	; 0x7e8 <fputc+0x48>
 7b2:	82 ff       	sbrs	r24, 2
 7b4:	0d c0       	rjmp	.+26     	; 0x7d0 <fputc+0x30>
 7b6:	2e 81       	ldd	r18, Y+6	; 0x06
 7b8:	3f 81       	ldd	r19, Y+7	; 0x07
 7ba:	8c 81       	ldd	r24, Y+4	; 0x04
 7bc:	9d 81       	ldd	r25, Y+5	; 0x05
 7be:	28 17       	cp	r18, r24
 7c0:	39 07       	cpc	r19, r25
 7c2:	64 f4       	brge	.+24     	; 0x7dc <fputc+0x3c>
 7c4:	e8 81       	ld	r30, Y
 7c6:	f9 81       	ldd	r31, Y+1	; 0x01
 7c8:	01 93       	st	Z+, r16
 7ca:	f9 83       	std	Y+1, r31	; 0x01
 7cc:	e8 83       	st	Y, r30
 7ce:	06 c0       	rjmp	.+12     	; 0x7dc <fputc+0x3c>
 7d0:	e8 85       	ldd	r30, Y+8	; 0x08
 7d2:	f9 85       	ldd	r31, Y+9	; 0x09
 7d4:	80 2f       	mov	r24, r16
 7d6:	09 95       	icall
 7d8:	89 2b       	or	r24, r25
 7da:	31 f4       	brne	.+12     	; 0x7e8 <fputc+0x48>
 7dc:	8e 81       	ldd	r24, Y+6	; 0x06
 7de:	9f 81       	ldd	r25, Y+7	; 0x07
 7e0:	01 96       	adiw	r24, 0x01	; 1
 7e2:	9f 83       	std	Y+7, r25	; 0x07
 7e4:	8e 83       	std	Y+6, r24	; 0x06
 7e6:	02 c0       	rjmp	.+4      	; 0x7ec <fputc+0x4c>
 7e8:	0f ef       	ldi	r16, 0xFF	; 255
 7ea:	1f ef       	ldi	r17, 0xFF	; 255
 7ec:	c8 01       	movw	r24, r16
 7ee:	df 91       	pop	r29
 7f0:	cf 91       	pop	r28
 7f2:	1f 91       	pop	r17
 7f4:	0f 91       	pop	r16
 7f6:	08 95       	ret

000007f8 <__ultoa_invert>:
 7f8:	fa 01       	movw	r30, r20
 7fa:	aa 27       	eor	r26, r26
 7fc:	28 30       	cpi	r18, 0x08	; 8
 7fe:	51 f1       	breq	.+84     	; 0x854 <__ultoa_invert+0x5c>
 800:	20 31       	cpi	r18, 0x10	; 16
 802:	81 f1       	breq	.+96     	; 0x864 <__stack+0x5>
 804:	e8 94       	clt
 806:	6f 93       	push	r22
 808:	6e 7f       	andi	r22, 0xFE	; 254
 80a:	6e 5f       	subi	r22, 0xFE	; 254
 80c:	7f 4f       	sbci	r23, 0xFF	; 255
 80e:	8f 4f       	sbci	r24, 0xFF	; 255
 810:	9f 4f       	sbci	r25, 0xFF	; 255
 812:	af 4f       	sbci	r26, 0xFF	; 255
 814:	b1 e0       	ldi	r27, 0x01	; 1
 816:	3e d0       	rcall	.+124    	; 0x894 <__stack+0x35>
 818:	b4 e0       	ldi	r27, 0x04	; 4
 81a:	3c d0       	rcall	.+120    	; 0x894 <__stack+0x35>
 81c:	67 0f       	add	r22, r23
 81e:	78 1f       	adc	r23, r24
 820:	89 1f       	adc	r24, r25
 822:	9a 1f       	adc	r25, r26
 824:	a1 1d       	adc	r26, r1
 826:	68 0f       	add	r22, r24
 828:	79 1f       	adc	r23, r25
 82a:	8a 1f       	adc	r24, r26
 82c:	91 1d       	adc	r25, r1
 82e:	a1 1d       	adc	r26, r1
 830:	6a 0f       	add	r22, r26
 832:	71 1d       	adc	r23, r1
 834:	81 1d       	adc	r24, r1
 836:	91 1d       	adc	r25, r1
 838:	a1 1d       	adc	r26, r1
 83a:	20 d0       	rcall	.+64     	; 0x87c <__stack+0x1d>
 83c:	09 f4       	brne	.+2      	; 0x840 <__ultoa_invert+0x48>
 83e:	68 94       	set
 840:	3f 91       	pop	r19
 842:	2a e0       	ldi	r18, 0x0A	; 10
 844:	26 9f       	mul	r18, r22
 846:	11 24       	eor	r1, r1
 848:	30 19       	sub	r19, r0
 84a:	30 5d       	subi	r19, 0xD0	; 208
 84c:	31 93       	st	Z+, r19
 84e:	de f6       	brtc	.-74     	; 0x806 <__ultoa_invert+0xe>
 850:	cf 01       	movw	r24, r30
 852:	08 95       	ret
 854:	46 2f       	mov	r20, r22
 856:	47 70       	andi	r20, 0x07	; 7
 858:	40 5d       	subi	r20, 0xD0	; 208
 85a:	41 93       	st	Z+, r20
 85c:	b3 e0       	ldi	r27, 0x03	; 3
 85e:	0f d0       	rcall	.+30     	; 0x87e <__stack+0x1f>
 860:	c9 f7       	brne	.-14     	; 0x854 <__ultoa_invert+0x5c>
 862:	f6 cf       	rjmp	.-20     	; 0x850 <__ultoa_invert+0x58>
 864:	46 2f       	mov	r20, r22
 866:	4f 70       	andi	r20, 0x0F	; 15
 868:	40 5d       	subi	r20, 0xD0	; 208
 86a:	4a 33       	cpi	r20, 0x3A	; 58
 86c:	18 f0       	brcs	.+6      	; 0x874 <__stack+0x15>
 86e:	49 5d       	subi	r20, 0xD9	; 217
 870:	31 fd       	sbrc	r19, 1
 872:	40 52       	subi	r20, 0x20	; 32
 874:	41 93       	st	Z+, r20
 876:	02 d0       	rcall	.+4      	; 0x87c <__stack+0x1d>
 878:	a9 f7       	brne	.-22     	; 0x864 <__stack+0x5>
 87a:	ea cf       	rjmp	.-44     	; 0x850 <__ultoa_invert+0x58>
 87c:	b4 e0       	ldi	r27, 0x04	; 4
 87e:	a6 95       	lsr	r26
 880:	97 95       	ror	r25
 882:	87 95       	ror	r24
 884:	77 95       	ror	r23
 886:	67 95       	ror	r22
 888:	ba 95       	dec	r27
 88a:	c9 f7       	brne	.-14     	; 0x87e <__stack+0x1f>
 88c:	00 97       	sbiw	r24, 0x00	; 0
 88e:	61 05       	cpc	r22, r1
 890:	71 05       	cpc	r23, r1
 892:	08 95       	ret
 894:	9b 01       	movw	r18, r22
 896:	ac 01       	movw	r20, r24
 898:	0a 2e       	mov	r0, r26
 89a:	06 94       	lsr	r0
 89c:	57 95       	ror	r21
 89e:	47 95       	ror	r20
 8a0:	37 95       	ror	r19
 8a2:	27 95       	ror	r18
 8a4:	ba 95       	dec	r27
 8a6:	c9 f7       	brne	.-14     	; 0x89a <__stack+0x3b>
 8a8:	62 0f       	add	r22, r18
 8aa:	73 1f       	adc	r23, r19
 8ac:	84 1f       	adc	r24, r20
 8ae:	95 1f       	adc	r25, r21
 8b0:	a0 1d       	adc	r26, r0
 8b2:	08 95       	ret

000008b4 <__prologue_saves__>:
 8b4:	2f 92       	push	r2
 8b6:	3f 92       	push	r3
 8b8:	4f 92       	push	r4
 8ba:	5f 92       	push	r5
 8bc:	6f 92       	push	r6
 8be:	7f 92       	push	r7
 8c0:	8f 92       	push	r8
 8c2:	9f 92       	push	r9
 8c4:	af 92       	push	r10
 8c6:	bf 92       	push	r11
 8c8:	cf 92       	push	r12
 8ca:	df 92       	push	r13
 8cc:	ef 92       	push	r14
 8ce:	ff 92       	push	r15
 8d0:	0f 93       	push	r16
 8d2:	1f 93       	push	r17
 8d4:	cf 93       	push	r28
 8d6:	df 93       	push	r29
 8d8:	cd b7       	in	r28, 0x3d	; 61
 8da:	de b7       	in	r29, 0x3e	; 62
 8dc:	ca 1b       	sub	r28, r26
 8de:	db 0b       	sbc	r29, r27
 8e0:	0f b6       	in	r0, 0x3f	; 63
 8e2:	f8 94       	cli
 8e4:	de bf       	out	0x3e, r29	; 62
 8e6:	0f be       	out	0x3f, r0	; 63
 8e8:	cd bf       	out	0x3d, r28	; 61
 8ea:	09 94       	ijmp

000008ec <__epilogue_restores__>:
 8ec:	2a 88       	ldd	r2, Y+18	; 0x12
 8ee:	39 88       	ldd	r3, Y+17	; 0x11
 8f0:	48 88       	ldd	r4, Y+16	; 0x10
 8f2:	5f 84       	ldd	r5, Y+15	; 0x0f
 8f4:	6e 84       	ldd	r6, Y+14	; 0x0e
 8f6:	7d 84       	ldd	r7, Y+13	; 0x0d
 8f8:	8c 84       	ldd	r8, Y+12	; 0x0c
 8fa:	9b 84       	ldd	r9, Y+11	; 0x0b
 8fc:	aa 84       	ldd	r10, Y+10	; 0x0a
 8fe:	b9 84       	ldd	r11, Y+9	; 0x09
 900:	c8 84       	ldd	r12, Y+8	; 0x08
 902:	df 80       	ldd	r13, Y+7	; 0x07
 904:	ee 80       	ldd	r14, Y+6	; 0x06
 906:	fd 80       	ldd	r15, Y+5	; 0x05
 908:	0c 81       	ldd	r16, Y+4	; 0x04
 90a:	1b 81       	ldd	r17, Y+3	; 0x03
 90c:	aa 81       	ldd	r26, Y+2	; 0x02
 90e:	b9 81       	ldd	r27, Y+1	; 0x01
 910:	ce 0f       	add	r28, r30
 912:	d1 1d       	adc	r29, r1
 914:	0f b6       	in	r0, 0x3f	; 63
 916:	f8 94       	cli
 918:	de bf       	out	0x3e, r29	; 62
 91a:	0f be       	out	0x3f, r0	; 63
 91c:	cd bf       	out	0x3d, r28	; 61
 91e:	ed 01       	movw	r28, r26
 920:	08 95       	ret

00000922 <_exit>:
 922:	f8 94       	cli

00000924 <__stop_program>:
 924:	ff cf       	rjmp	.-2      	; 0x924 <__stop_program>
