Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./DIO_cfg.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./RTOS_prg.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

pfun                0x2               ./main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./DIO_cfg.o
LOAD ./DIO_prg.o
LOAD ./RTOS_cfg.o
LOAD ./RTOS_prg.o
LOAD ./main.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xcc8
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_9
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092        0x0 ./DIO_cfg.o
 .text          0x00000092        0x0 ./DIO_prg.o
 .text          0x00000092        0x0 ./RTOS_cfg.o
 .text          0x00000092        0x0 ./RTOS_prg.o
 .text          0x00000092        0x0 ./main.o
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000092                . = ALIGN (0x2)
 *(.text.*)
 .text.DIO_vidInit
                0x00000092      0x44c ./DIO_prg.o
                0x00000092                DIO_vidInit
 .text.DIO_enuSetPinValue
                0x000004de      0x11c ./DIO_prg.o
                0x000004de                DIO_enuSetPinValue
 .text.DIO_enuGetPinValue
                0x000005fa       0xb6 ./DIO_prg.o
                0x000005fa                DIO_enuGetPinValue
 .text.DIO_enuSetPinDirection
                0x000006b0      0x11c ./DIO_prg.o
                0x000006b0                DIO_enuSetPinDirection
 .text.DIO_enuSetPortValue
                0x000007cc       0x72 ./DIO_prg.o
                0x000007cc                DIO_enuSetPortValue
 .text.DIO_enuGetPortValue
                0x0000083e       0x82 ./DIO_prg.o
                0x0000083e                DIO_enuGetPortValue
 .text.DIO_enuSetPortDirecrion
                0x000008c0       0x72 ./DIO_prg.o
                0x000008c0                DIO_enuSetPortDirecrion
 .text.RTOS_vidInit
                0x00000932       0x12 ./RTOS_prg.o
                0x00000932                RTOS_vidInit
 .text.RTOS_sysTick
                0x00000944       0x30 ./RTOS_prg.o
                0x00000944                RTOS_sysTick
 .text.RTOS_startRTOS
                0x00000974       0x14 ./RTOS_prg.o
                0x00000974                RTOS_startRTOS
 .text.RTOS_stopRTOS
                0x00000988       0x12 ./RTOS_prg.o
                0x00000988                RTOS_stopRTOS
 .text.RTOS_enable_task
                0x0000099a       0x46 ./RTOS_prg.o
                0x0000099a                RTOS_enable_task
 .text.RTOS_disable_task
                0x000009e0       0x44 ./RTOS_prg.o
                0x000009e0                RTOS_disable_task
 .text.RTOS_schadular
                0x00000a24       0xe8 ./RTOS_prg.o
                0x00000a24                RTOS_schadular
 .text.blink1000
                0x00000b0c       0x2e ./main.o
                0x00000b0c                blink1000
 .text.blink500
                0x00000b3a       0x2e ./main.o
                0x00000b3a                blink500
 .text.blink250
                0x00000b68       0x2e ./main.o
                0x00000b68                blink250
 .text.Timer1_Init
                0x00000b96       0x8a ./main.o
                0x00000b96                Timer1_Init
 .text.__vector_7
                0x00000c20       0x66 ./main.o
                0x00000c20                __vector_7
 .text.main     0x00000c86       0x3e ./main.o
                0x00000c86                main
 .text.libgcc   0x00000cc4        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000cc4        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000cc4        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000cc4                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000cc4        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00000cc4                exit
                0x00000cc4                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000cc4        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000cc8                _etext = .

.data           0x00800060       0x54 load address 0x00000cc8
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./DIO_cfg.o
 .data          0x00800060        0x0 ./DIO_prg.o
 .data          0x00800060        0x0 ./RTOS_cfg.o
 .data          0x00800060        0x0 ./RTOS_prg.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 .data.task1    0x00800060        0x7 ./RTOS_cfg.o
                0x00800060                task1
 .data.task2    0x00800067        0x7 ./RTOS_cfg.o
                0x00800067                task2
 .data.task3    0x0080006e        0x7 ./RTOS_cfg.o
                0x0080006e                task3
 .data.task_tabele
                0x00800075       0x14 ./RTOS_cfg.o
                0x00800075                task_tabele
 .data.timer_counter
                0x00800089        0x1 ./main.o
                0x00800089                timer_counter
 *(.rodata)
 *(.rodata*)
 .rodata.DIO_kastrPinCg
                0x0080008a        0xc ./DIO_cfg.o
                0x0080008a                DIO_kastrPinCg
 .rodata.DIO_kastrPortCg
                0x00800096        0x5 ./DIO_cfg.o
                0x00800096                DIO_kastrPortCg
 .rodata.u8KarrPorts
                0x0080009b        0x8 ./DIO_prg.o
 .rodata.u8KarrDdra
                0x008000a3        0x8 ./DIO_prg.o
 .rodata.u8KarrPins
                0x008000ab        0x8 ./DIO_prg.o
 *(.gnu.linkonce.d*)
                0x008000b4                . = ALIGN (0x2)
 *fill*         0x008000b3        0x1 00
                0x008000b4                _edata = .
                0x008000b4                PROVIDE (__data_end, .)

.bss            0x008000b4        0x7
                0x008000b4                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x008000b4        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x008000b4        0x0 ./DIO_cfg.o
 .bss           0x008000b4        0x0 ./DIO_prg.o
 .bss           0x008000b4        0x0 ./RTOS_cfg.o
 .bss           0x008000b4        0x0 ./RTOS_prg.o
 .bss           0x008000b4        0x0 ./main.o
 .bss           0x008000b4        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x008000b4        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x008000b4        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.RTOS_Tick
                0x008000b4        0x1 ./RTOS_prg.o
 .bss.RTOS_Start
                0x008000b5        0x1 ./RTOS_prg.o
 .bss.led_state.1295
                0x008000b6        0x1 ./main.o
 .bss.led_state.1304
                0x008000b7        0x1 ./main.o
 .bss.led_state.1313
                0x008000b8        0x1 ./main.o
 *(COMMON)
 COMMON         0x008000b9        0x2 ./main.o
                0x008000b9                pfun
                0x008000bb                PROVIDE (__bss_end, .)
                0x00000cc8                __data_load_start = LOADADDR (.data)
                0x00000d1c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008000bb        0x0
                0x008000bb                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008000bb                PROVIDE (__noinit_end, .)
                0x008000bb                _end = .
                0x008000bb                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x1644
 *(.stab)
 .stab          0x00000000      0x1f8 ./DIO_cfg.o
 .stab          0x000001f8      0x864 ./DIO_prg.o
                                0x954 (size before relaxing)
 .stab          0x00000a5c      0x144 ./RTOS_cfg.o
                                0x210 (size before relaxing)
 .stab          0x00000ba0      0x5c4 ./RTOS_prg.o
                                0x6b4 (size before relaxing)
 .stab          0x00001164      0x4e0 ./main.o
                                0x6e4 (size before relaxing)

.stabstr        0x00000000      0xebe
 *(.stabstr)
 .stabstr       0x00000000      0xebe ./DIO_cfg.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(RTOS.elf elf32-avr)
LOAD linker stubs
